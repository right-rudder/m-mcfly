---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import HeroSmall from "../../components/HeroSmall.astro";

export async function getStaticPaths() {
  const items = await getCollection("blog");
  return items.map((e) => ({
    params: { slug: e.slug },
    props: { e },
  }));
}

const { e } = Astro.props;
// Render MD content + capture headings for TOC (optional)
const { Content, headings } = await e.render();

// Compute reading time
const body = e.body ?? "";
const words = body.trim().split(/\s+/).length;
const minutes = Math.max(1, Math.round(words / 200));

// Format date
const pubDate =
  e.data?.pubDate instanceof Date
    ? e.data.pubDate
    : new Date(e.data?.pubDate || Date.now());

// Load related posts (same tag overlap, fallback to latest)
const all = await getCollection("blog");
const currentSlug = e.slug;
const currentTags = new Set((e.data?.tags || []).map(String));
const related = all
  .filter((p) => p.slug !== currentSlug)
  .map((p) => {
    const t = new Set((p.data?.tags || []).map(String));
    const overlap = [...t].some((tag) => currentTags.has(tag));
    return { e: p, overlap };
  })
  .sort((a, b) => Number(b.overlap) - Number(a.overlap))
  .slice(0, 3)
  .map(({ e }) => ({
    url: `/blog/${e.slug}/`,
    title: e.data.title,
    description: e.data.description ?? "",
    heroImage: e.data.heroImage ?? null,
    tags: e.data.tags ?? [],
    pubDate:
      e.data?.pubDate instanceof Date
        ? e.data.pubDate
        : new Date(e.data?.pubDate || Date.now()),
  }));

  const heroData = {
    eyebrow: "Blog",
    title: e.data?.title || "Blog Post",
    subtitle: e.data?.description || "",
    primaryImage: e.data?.heroImage || "/src/assets/stock/hero-homepage.jpg",
    primaryAlt: e.data?.title || "Blog header image",
  };
---

<!-- keep this page layout-only; your site layout can inject navbar/footer -->
<BaseLayout>
  <HeroSmall data={heroData} />
  <main class="mx-auto max-w-3xl px-4 py-10 sm:px-6 lg:px-0">
    <!-- Breadcrumb (simple) -->
    <nav aria-label="Breadcrumb" class="mb-6 text-sm text-zinc-600">
      <a href="/blog" class="hover:underline">Blog</a>
      <span class="mx-2">/</span>
      <span class="text-zinc-900">{e.data?.title}</span>
    </nav>

    <!-- Title -->
    <h1 class="text-3xl font-bold tracking-tight sm:text-4xl">
      {e.data?.title}
    </h1>

    <!-- Meta row -->
    <div class="mt-3 flex flex-wrap items-center gap-3 text-sm text-zinc-600">
      {e.data?.author && <span>By {e.data.author}</span>}
      <span>•</span>
      <time datetime={pubDate.toISOString()}>
        {pubDate.toLocaleDateString()}
      </time>
      <span>•</span>
      <span>{minutes} min read</span>
      {
        (e.data?.tags?.length ?? 0) > 0 && (
          <>
            <span>•</span>
            <ul class="flex flex-wrap gap-2">
              {e.data.tags.map((t) => (
                <li class="rounded-full border border-zinc-300 px-2 py-0.5 text-xs text-zinc-700">
                  {t}
                </li>
              ))}
            </ul>
          </>
        )
      }
    </div>

    <!-- Hero image -->
    {
      e.data?.heroImage && (
        <figure class="mt-6 overflow-hidden rounded-2xl border border-zinc-200">
          <img
            src={e.data.heroImage}
            alt={e.data?.title || "Blog header"}
            class="h-full w-full object-cover"
            loading="eager"
          />
        </figure>
      )
    }

    <!-- Layout with optional TOC -->
    <div class="mt-8 grid grid-cols-1 gap-10 lg:grid-cols-[1fr_260px]">
      <!-- Article body -->
      <article class="prose prose-zinc max-w-none">
        <Content />
      </article>

      <!-- Simple TOC (h2/h3) on desktop -->
      {
        (headings?.length ?? 0) > 0 && (
          <aside class="hidden lg:block">
            <div class="sticky top-24 rounded-2xl border border-zinc-200 p-4">
              <p class="mb-3 text-xs font-semibold tracking-wide text-zinc-500 uppercase">
                On this page
              </p>
              <ul class="space-y-2 text-sm">
                {headings
                  .filter((h) => h.depth === 2 || h.depth === 3)
                  .map((h) => (
                    <li class={h.depth === 3 ? "pl-3" : ""}>
                      <a
                        href={`#${h.slug}`}
                        class="text-zinc-700 hover:underline"
                      >
                        {h.text}
                      </a>
                    </li>
                  ))}
              </ul>
            </div>
          </aside>
        )
      }
    </div>

    <!-- Share
    <div class="mt-10 border-t border-zinc-200 pt-6">
      <ShareActions url={pageUrl} title={e.data?.title || ""} client:load />
    </div> -->

    <!-- Related posts -->
    {
      related.length > 0 && (
        <section class="mt-12">
          <h2 class="text-xl font-semibold">More articles</h2>
          <div class="mt-5 grid gap-6 sm:grid-cols-2">
            {related.map((r) => (
              <a
                href={r.url}
                class="group block overflow-hidden rounded-2xl border border-zinc-200 transition hover:border-zinc-300"
              >
                <div class="aspect-[16/9] w-full bg-zinc-100">
                  {r.heroImage ? (
                    <img
                      src={r.heroImage}
                      alt={r.title}
                      class="h-full w-full object-cover"
                      loading="lazy"
                    />
                  ) : null}
                </div>
                <div class="p-4">
                  <p class="text-sm text-zinc-500">
                    {r.pubDate ? new Date(r.pubDate).toLocaleDateString() : ""}
                  </p>
                  <h3 class="mt-1 text-base font-semibold group-hover:underline">
                    {r.title}
                  </h3>
                  {r.description && (
                    <p class="mt-1 line-clamp-2 text-sm text-zinc-600">
                      {r.description}
                    </p>
                  )}
                </div>
              </a>
            ))}
          </div>
        </section>
      )
    }
  </main>
</BaseLayout>
